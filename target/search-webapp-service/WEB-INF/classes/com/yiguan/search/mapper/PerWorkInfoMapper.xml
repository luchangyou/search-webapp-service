<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiguan.search.mapper.PerWorkInfoMapper" >
  <resultMap id="BaseResultMap" type="com.yiguan.search.model.PerWorkInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="oname" property="oname" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="job_early" property="jobEarly" jdbcType="VARCHAR" />
    <result column="work_time" property="workTime" jdbcType="VARCHAR" />
    <result column="wtype" property="wtype" jdbcType="VARCHAR" />
    <result column="company_addr" property="companyAddr" jdbcType="VARCHAR" />
    <result column="oph" property="oph" jdbcType="VARCHAR" />
    <result column="income" property="income" jdbcType="VARCHAR" />
    <result column="w_desc" property="wDesc" jdbcType="LONGVARCHAR" />
    <result column="uuid" property="uuid" jdbcType="CHAR" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="atime" property="atime" jdbcType="TIMESTAMP" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_forPage" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Group_Contact_List" >
    <choose >
      <when test="groupConcatList!=null and groupByClause != null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="groupConcatList" item="concat" separator="," >
            ${concat}
          </foreach>
        </trim>
        ,
      </when>
    </choose>
  </sql>
  <sql id="Group_Contact_List_forPage" >
    <choose >
      <when test="example.groupConcatList!=null and example.groupByClause != null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="example.groupConcatList" item="concat" separator="," >
            ${concat}
          </foreach>
        </trim>
        ,
      </when>
    </choose>
  </sql>
  <sql id="Base_Column_List" >
    <choose >
      <when test="columnFilterList!=null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="columnFilterList" item="column" separator="," >
            ${column}
          </foreach>
        </trim>
      </when>
      <otherwise >
        id, oname, department, job, level, job_early, work_time, wtype, company_addr, oph, 
        income, w_desc, uuid, ctime, atime, start_time, end_time
      </otherwise>
    </choose>
  </sql>
  <sql id="Base_Column_List_forPage" >
    <choose >
      <when test="example.columnFilterList!=null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="example.columnFilterList" item="column" separator="," >
            ${column}
          </foreach>
        </trim>
      </when>
      <otherwise >
        id, oname, department, job, level, job_early, work_time, wtype, company_addr, oph, 
        income, w_desc, uuid, ctime, atime, start_time, end_time
      </otherwise>
    </choose>
  </sql>
  <sql id="Base_Column_List_all" >
    id, oname, department, job, level, job_early, work_time, wtype, company_addr, oph, 
    income, w_desc, uuid, ctime, atime, start_time, end_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yiguan.search.model.PerWorkInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Group_Contact_List" />
    <include refid="Base_Column_List" />
    from per_work_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null" >
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleForPage" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Group_Contact_List_forPage" />
    <include refid="Base_Column_List_forPage" />
    from per_work_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_forPage" />
    </if>
    <if test="example.groupByClause != null" >
      group by ${example.groupByClause}
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="page.limit != -1" >
       limit #{page.begin}, #{page.limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List_all" />
    from per_work_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from per_work_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yiguan.search.model.PerWorkInfoExample" >
    delete from per_work_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yiguan.search.model.PerWorkInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into per_work_info (id, oname, department, 
      job, level, job_early, 
      work_time, wtype, company_addr, 
      oph, income, w_desc, 
      uuid, ctime, atime, 
      start_time, end_time)
    values (#{id,jdbcType=BIGINT}, #{oname,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{jobEarly,jdbcType=VARCHAR}, 
      #{workTime,jdbcType=VARCHAR}, #{wtype,jdbcType=VARCHAR}, #{companyAddr,jdbcType=VARCHAR}, 
      #{oph,jdbcType=VARCHAR}, #{income,jdbcType=VARCHAR}, #{wDesc,jdbcType=LONGVARCHAR}, 
      #{uuid,jdbcType=CHAR}, #{ctime,jdbcType=TIMESTAMP}, #{atime,jdbcType=TIMESTAMP}, 
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yiguan.search.model.PerWorkInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into per_work_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="oname != null" >
        oname,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="jobEarly != null" >
        job_early,
      </if>
      <if test="workTime != null" >
        work_time,
      </if>
      <if test="wtype != null" >
        wtype,
      </if>
      <if test="companyAddr != null" >
        company_addr,
      </if>
      <if test="oph != null" >
        oph,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="wDesc != null" >
        w_desc,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="atime != null" >
        atime,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="oname != null" >
        #{oname,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="jobEarly != null" >
        #{jobEarly,jdbcType=VARCHAR},
      </if>
      <if test="workTime != null" >
        #{workTime,jdbcType=VARCHAR},
      </if>
      <if test="wtype != null" >
        #{wtype,jdbcType=VARCHAR},
      </if>
      <if test="companyAddr != null" >
        #{companyAddr,jdbcType=VARCHAR},
      </if>
      <if test="oph != null" >
        #{oph,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        #{income,jdbcType=VARCHAR},
      </if>
      <if test="wDesc != null" >
        #{wDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="atime != null" >
        #{atime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiguan.search.model.PerWorkInfoExample" resultType="java.lang.Integer" >
    <choose >
      <when test="groupByClause != null" >
        select count(*) from ( select count(*) from per_work_info
        <if test="_parameter != null" >
          <include refid="Example_Where_Clause" />
        </if>
        group by ${groupByClause}) as temp
      </when>
      <otherwise >
        select count(*) from per_work_info
        <if test="_parameter != null" >
          <include refid="Example_Where_Clause" />
        </if>
      </otherwise>
    </choose>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update per_work_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.oname != null" >
        oname = #{record.oname,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null" >
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.jobEarly != null" >
        job_early = #{record.jobEarly,jdbcType=VARCHAR},
      </if>
      <if test="record.workTime != null" >
        work_time = #{record.workTime,jdbcType=VARCHAR},
      </if>
      <if test="record.wtype != null" >
        wtype = #{record.wtype,jdbcType=VARCHAR},
      </if>
      <if test="record.companyAddr != null" >
        company_addr = #{record.companyAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.oph != null" >
        oph = #{record.oph,jdbcType=VARCHAR},
      </if>
      <if test="record.income != null" >
        income = #{record.income,jdbcType=VARCHAR},
      </if>
      <if test="record.wDesc != null" >
        w_desc = #{record.wDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.atime != null" >
        atime = #{record.atime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update per_work_info
    set id = #{record.id,jdbcType=BIGINT},
      oname = #{record.oname,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      job_early = #{record.jobEarly,jdbcType=VARCHAR},
      work_time = #{record.workTime,jdbcType=VARCHAR},
      wtype = #{record.wtype,jdbcType=VARCHAR},
      company_addr = #{record.companyAddr,jdbcType=VARCHAR},
      oph = #{record.oph,jdbcType=VARCHAR},
      income = #{record.income,jdbcType=VARCHAR},
      w_desc = #{record.wDesc,jdbcType=LONGVARCHAR},
      uuid = #{record.uuid,jdbcType=CHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      atime = #{record.atime,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiguan.search.model.PerWorkInfo" >
    update per_work_info
    <set >
      <if test="oname != null" >
        oname = #{oname,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="jobEarly != null" >
        job_early = #{jobEarly,jdbcType=VARCHAR},
      </if>
      <if test="workTime != null" >
        work_time = #{workTime,jdbcType=VARCHAR},
      </if>
      <if test="wtype != null" >
        wtype = #{wtype,jdbcType=VARCHAR},
      </if>
      <if test="companyAddr != null" >
        company_addr = #{companyAddr,jdbcType=VARCHAR},
      </if>
      <if test="oph != null" >
        oph = #{oph,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=VARCHAR},
      </if>
      <if test="wDesc != null" >
        w_desc = #{wDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="atime != null" >
        atime = #{atime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiguan.search.model.PerWorkInfo" >
    update per_work_info
    set oname = #{oname,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      job_early = #{jobEarly,jdbcType=VARCHAR},
      work_time = #{workTime,jdbcType=VARCHAR},
      wtype = #{wtype,jdbcType=VARCHAR},
      company_addr = #{companyAddr,jdbcType=VARCHAR},
      oph = #{oph,jdbcType=VARCHAR},
      income = #{income,jdbcType=VARCHAR},
      w_desc = #{wDesc,jdbcType=LONGVARCHAR},
      uuid = #{uuid,jdbcType=CHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      atime = #{atime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>