<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiguan.search.mapper.PerKnowledgeMapper" >
  <resultMap id="BaseResultMap" type="com.yiguan.search.model.PerKnowledge" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="kname" property="kname" jdbcType="VARCHAR" />
    <result column="rtype" property="rtype" jdbcType="VARCHAR" />
    <result column="rgrade" property="rgrade" jdbcType="VARCHAR" />
    <result column="rp_desc" property="rpDesc" jdbcType="VARCHAR" />
    <result column="puuid" property="puuid" jdbcType="CHAR" />
    <result column="kuuid" property="kuuid" jdbcType="CHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="atime" property="atime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_forPage" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Group_Contact_List" >
    <choose >
      <when test="groupConcatList!=null and groupByClause != null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="groupConcatList" item="concat" separator="," >
            ${concat}
          </foreach>
        </trim>
        ,
      </when>
    </choose>
  </sql>
  <sql id="Group_Contact_List_forPage" >
    <choose >
      <when test="example.groupConcatList!=null and example.groupByClause != null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="example.groupConcatList" item="concat" separator="," >
            ${concat}
          </foreach>
        </trim>
        ,
      </when>
    </choose>
  </sql>
  <sql id="Base_Column_List" >
    <choose >
      <when test="columnFilterList!=null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="columnFilterList" item="column" separator="," >
            ${column}
          </foreach>
        </trim>
      </when>
      <otherwise >
        id, name, kname, rtype, rgrade, rp_desc, puuid, kuuid, source, ctime, atime
      </otherwise>
    </choose>
  </sql>
  <sql id="Base_Column_List_forPage" >
    <choose >
      <when test="example.columnFilterList!=null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="example.columnFilterList" item="column" separator="," >
            ${column}
          </foreach>
        </trim>
      </when>
      <otherwise >
        id, name, kname, rtype, rgrade, rp_desc, puuid, kuuid, source, ctime, atime
      </otherwise>
    </choose>
  </sql>
  <sql id="Base_Column_List_all" >
    id, name, kname, rtype, rgrade, rp_desc, puuid, kuuid, source, ctime, atime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yiguan.search.model.PerKnowledgeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Group_Contact_List" />
    <include refid="Base_Column_List" />
    from per_knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null" >
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleForPage" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Group_Contact_List_forPage" />
    <include refid="Base_Column_List_forPage" />
    from per_knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_forPage" />
    </if>
    <if test="example.groupByClause != null" >
      group by ${example.groupByClause}
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="page.limit != -1" >
       limit #{page.begin}, #{page.limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List_all" />
    from per_knowledge
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from per_knowledge
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yiguan.search.model.PerKnowledgeExample" >
    delete from per_knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yiguan.search.model.PerKnowledge" useGeneratedKeys="true" keyProperty="id" >
    insert into per_knowledge (id, name, kname, 
      rtype, rgrade, rp_desc, 
      puuid, kuuid, source, ctime, 
      atime)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{kname,jdbcType=VARCHAR}, 
      #{rtype,jdbcType=VARCHAR}, #{rgrade,jdbcType=VARCHAR}, #{rpDesc,jdbcType=VARCHAR}, 
      #{puuid,jdbcType=CHAR}, #{kuuid,jdbcType=CHAR}, #{source,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{atime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yiguan.search.model.PerKnowledge" useGeneratedKeys="true" keyProperty="id" >
    insert into per_knowledge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="kname != null" >
        kname,
      </if>
      <if test="rtype != null" >
        rtype,
      </if>
      <if test="rgrade != null" >
        rgrade,
      </if>
      <if test="rpDesc != null" >
        rp_desc,
      </if>
      <if test="puuid != null" >
        puuid,
      </if>
      <if test="kuuid != null" >
        kuuid,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="atime != null" >
        atime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="kname != null" >
        #{kname,jdbcType=VARCHAR},
      </if>
      <if test="rtype != null" >
        #{rtype,jdbcType=VARCHAR},
      </if>
      <if test="rgrade != null" >
        #{rgrade,jdbcType=VARCHAR},
      </if>
      <if test="rpDesc != null" >
        #{rpDesc,jdbcType=VARCHAR},
      </if>
      <if test="puuid != null" >
        #{puuid,jdbcType=CHAR},
      </if>
      <if test="kuuid != null" >
        #{kuuid,jdbcType=CHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="atime != null" >
        #{atime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiguan.search.model.PerKnowledgeExample" resultType="java.lang.Integer" >
    <choose >
      <when test="groupByClause != null" >
        select count(*) from ( select count(*) from per_knowledge
        <if test="_parameter != null" >
          <include refid="Example_Where_Clause" />
        </if>
        group by ${groupByClause}) as temp
      </when>
      <otherwise >
        select count(*) from per_knowledge
        <if test="_parameter != null" >
          <include refid="Example_Where_Clause" />
        </if>
      </otherwise>
    </choose>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update per_knowledge
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.kname != null" >
        kname = #{record.kname,jdbcType=VARCHAR},
      </if>
      <if test="record.rtype != null" >
        rtype = #{record.rtype,jdbcType=VARCHAR},
      </if>
      <if test="record.rgrade != null" >
        rgrade = #{record.rgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.rpDesc != null" >
        rp_desc = #{record.rpDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.puuid != null" >
        puuid = #{record.puuid,jdbcType=CHAR},
      </if>
      <if test="record.kuuid != null" >
        kuuid = #{record.kuuid,jdbcType=CHAR},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.atime != null" >
        atime = #{record.atime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update per_knowledge
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      kname = #{record.kname,jdbcType=VARCHAR},
      rtype = #{record.rtype,jdbcType=VARCHAR},
      rgrade = #{record.rgrade,jdbcType=VARCHAR},
      rp_desc = #{record.rpDesc,jdbcType=VARCHAR},
      puuid = #{record.puuid,jdbcType=CHAR},
      kuuid = #{record.kuuid,jdbcType=CHAR},
      source = #{record.source,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      atime = #{record.atime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiguan.search.model.PerKnowledge" >
    update per_knowledge
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="kname != null" >
        kname = #{kname,jdbcType=VARCHAR},
      </if>
      <if test="rtype != null" >
        rtype = #{rtype,jdbcType=VARCHAR},
      </if>
      <if test="rgrade != null" >
        rgrade = #{rgrade,jdbcType=VARCHAR},
      </if>
      <if test="rpDesc != null" >
        rp_desc = #{rpDesc,jdbcType=VARCHAR},
      </if>
      <if test="puuid != null" >
        puuid = #{puuid,jdbcType=CHAR},
      </if>
      <if test="kuuid != null" >
        kuuid = #{kuuid,jdbcType=CHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="atime != null" >
        atime = #{atime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiguan.search.model.PerKnowledge" >
    update per_knowledge
    set name = #{name,jdbcType=VARCHAR},
      kname = #{kname,jdbcType=VARCHAR},
      rtype = #{rtype,jdbcType=VARCHAR},
      rgrade = #{rgrade,jdbcType=VARCHAR},
      rp_desc = #{rpDesc,jdbcType=VARCHAR},
      puuid = #{puuid,jdbcType=CHAR},
      kuuid = #{kuuid,jdbcType=CHAR},
      source = #{source,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      atime = #{atime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>