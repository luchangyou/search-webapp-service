<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiguan.search.mapper.PerEducationInfoMapper" >
  <resultMap id="BaseResultMap" type="com.yiguan.search.model.PerEducationInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="diploma" property="diploma" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="VARCHAR" />
    <result column="end_date" property="endDate" jdbcType="VARCHAR" />
    <result column="event" property="event" jdbcType="LONGVARCHAR" />
    <result column="uuid" property="uuid" jdbcType="CHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="atime" property="atime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_forPage" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Group_Contact_List" >
    <choose >
      <when test="groupConcatList!=null and groupByClause != null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="groupConcatList" item="concat" separator="," >
            ${concat}
          </foreach>
        </trim>
        ,
      </when>
    </choose>
  </sql>
  <sql id="Group_Contact_List_forPage" >
    <choose >
      <when test="example.groupConcatList!=null and example.groupByClause != null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="example.groupConcatList" item="concat" separator="," >
            ${concat}
          </foreach>
        </trim>
        ,
      </when>
    </choose>
  </sql>
  <sql id="Base_Column_List" >
    <choose >
      <when test="columnFilterList!=null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="columnFilterList" item="column" separator="," >
            ${column}
          </foreach>
        </trim>
      </when>
      <otherwise >
        id, school, major, diploma, start_date, end_date, event, uuid, type, place, ctime, 
        atime, end_time, start_time
      </otherwise>
    </choose>
  </sql>
  <sql id="Base_Column_List_forPage" >
    <choose >
      <when test="example.columnFilterList!=null" >
        <trim prefix="" suffix="" suffixOverrides="," >
          <foreach collection="example.columnFilterList" item="column" separator="," >
            ${column}
          </foreach>
        </trim>
      </when>
      <otherwise >
        id, school, major, diploma, start_date, end_date, event, uuid, type, place, ctime, 
        atime, end_time, start_time
      </otherwise>
    </choose>
  </sql>
  <sql id="Base_Column_List_all" >
    id, school, major, diploma, start_date, end_date, event, uuid, type, place, ctime, 
    atime, end_time, start_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yiguan.search.model.PerEducationInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Group_Contact_List" />
    <include refid="Base_Column_List" />
    from per_education_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null" >
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleForPage" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Group_Contact_List_forPage" />
    <include refid="Base_Column_List_forPage" />
    from per_education_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_forPage" />
    </if>
    <if test="example.groupByClause != null" >
      group by ${example.groupByClause}
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="page.limit != -1" >
       limit #{page.begin}, #{page.limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List_all" />
    from per_education_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from per_education_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yiguan.search.model.PerEducationInfoExample" >
    delete from per_education_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yiguan.search.model.PerEducationInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into per_education_info (id, school, major, 
      diploma, start_date, end_date, 
      event, uuid, type, 
      place, ctime, atime, 
      end_time, start_time)
    values (#{id,jdbcType=BIGINT}, #{school,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{diploma,jdbcType=VARCHAR}, #{startDate,jdbcType=VARCHAR}, #{endDate,jdbcType=VARCHAR}, 
      #{event,jdbcType=LONGVARCHAR}, #{uuid,jdbcType=CHAR}, #{type,jdbcType=TINYINT}, 
      #{place,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, #{atime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yiguan.search.model.PerEducationInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into per_education_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="diploma != null" >
        diploma,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="event != null" >
        event,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="atime != null" >
        atime,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="diploma != null" >
        #{diploma,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="event != null" >
        #{event,jdbcType=LONGVARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="atime != null" >
        #{atime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiguan.search.model.PerEducationInfoExample" resultType="java.lang.Integer" >
    <choose >
      <when test="groupByClause != null" >
        select count(*) from ( select count(*) from per_education_info
        <if test="_parameter != null" >
          <include refid="Example_Where_Clause" />
        </if>
        group by ${groupByClause}) as temp
      </when>
      <otherwise >
        select count(*) from per_education_info
        <if test="_parameter != null" >
          <include refid="Example_Where_Clause" />
        </if>
      </otherwise>
    </choose>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update per_education_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.diploma != null" >
        diploma = #{record.diploma,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=VARCHAR},
      </if>
      <if test="record.event != null" >
        event = #{record.event,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.atime != null" >
        atime = #{record.atime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update per_education_info
    set id = #{record.id,jdbcType=BIGINT},
      school = #{record.school,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      diploma = #{record.diploma,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=VARCHAR},
      end_date = #{record.endDate,jdbcType=VARCHAR},
      event = #{record.event,jdbcType=LONGVARCHAR},
      uuid = #{record.uuid,jdbcType=CHAR},
      type = #{record.type,jdbcType=TINYINT},
      place = #{record.place,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      atime = #{record.atime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiguan.search.model.PerEducationInfo" >
    update per_education_info
    <set >
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="diploma != null" >
        diploma = #{diploma,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="event != null" >
        event = #{event,jdbcType=LONGVARCHAR},
      </if>
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="atime != null" >
        atime = #{atime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiguan.search.model.PerEducationInfo" >
    update per_education_info
    set school = #{school,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      diploma = #{diploma,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=VARCHAR},
      end_date = #{endDate,jdbcType=VARCHAR},
      event = #{event,jdbcType=LONGVARCHAR},
      uuid = #{uuid,jdbcType=CHAR},
      type = #{type,jdbcType=TINYINT},
      place = #{place,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      atime = #{atime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>